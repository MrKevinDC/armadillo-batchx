#!/bin/bash
## This script will check the dependencies required for Armadillo ##

install_program(){
	echo "Do you wish to install $1 (y/n)?"
	read answer
	if [ $(echo $answer | tr '[:upper:]' '[:lower:]') = "yes" ] || [ $(echo $answer | tr '[:upper:]' '[:lower:]') = "y" ]
	then
		echo "Installing $1..."
		$2 apt-get install -y $1
	fi
}

## Check if running as sudo ##
if [ "$EUID" -ne 0 ]
then
	sudo="" #local user
else
	sudo="sudo" #sudo
fi

echo Checking system dependencies...
for program in samtools bwa python3
do
	echo -ne "\t - ${program}..."
	[[ $(command -v ${program}) ]] && echo -e OK || { echo -e "$program needs to be installed."; install_program $program $sudo; }
done

echo -ne "\t - pip3..."
[[ $(command -v pip3) ]] && echo -e OK || { echo -e "pip3 needs to be installed."; install_program python3-pip $sudo; } 

for program in gfClient gfServer
do
	echo -ne "\t - ${program}..."
	if [ "$sudo" == "sudo" ]
	then
		[[ $(command -v ${program}) ]] && echo -e OK || { echo -e "$program needs to be installed."; wget -o /usr/local/bin/$program "http://hgdownload.soe.ucsc.edu/admin/exe/linux.x86_64.v385/blat/$program" && chmod +x /usr/local/bin/$program; }
	else
		[[ $(command -v ${program}) ]] && echo -e OK || { echo -e "$program needs to be installed."; wget -o ~/.local/bin/$program "http://hgdownload.soe.ucsc.edu/admin/exe/linux.x86_64.v385/blat/$program" && chmod +x ~/.local/bin/$program; }
	fi
done

echo Checking python dependencies...
for module in argparse multiprocessing os pyfaidx re sys statistics subprocess pysam numpy pandas scipy
do
	echo -ne "\t - ${module}... "
	[[ $(python3 -c 'import pkgutil; print(1 if pkgutil.find_loader('"'$module'"') else 0)') -eq 1 ]] && echo -e OK || $sudo pip3 install ${module}
done

##Set the installation path##
installation_path="installation_path=$(dirname $(realpath $0))/"
sed -i -e "3s:.*:${installation_path}:g" $(dirname $0)/scripts/default_config.txt
sed -i -e "3s:.*:${installation_path}:g" $(dirname $0)/configuration_file.txt

##Set an alias to armadillo##
if [ "$EUID" -ne 0 ] && ! grep -q armadillo ~/.bashrc ## If not sudo, create a user-specific alias ##
then
	echo "
alias armadillo='$(realpath $(dirname $0))/armadillo'" >> ~/.bashrc #alias to armadillo
elif [ "$EUID" -ne 0 ] && grep -q armadillo ~/.bashrc ## Refresh the alias ##
then
	new_alias="alias armadillo='$(realpath $(dirname $0))/armadillo'"
	sed -i "s@alias armadillo.*@$new_alias@g" ~/.bashrc
elif [ "$EUID" -eq 0 ] && ! grep -q armadillo /etc/bash.bashrc ## Add it to sudo bashrc ##
then
	echo "
#alias to armadillo
alias armadillo='$(realpath $(dirname $0))/armadillo'" >> /etc/bash.bashrc
elif [ "$EUID" -eq 0 ] && grep -q armadillo ~/.bashrc ## Refresh the alias ##
then
	new_alias="alias armadillo='$(realpath $(dirname $0))/armadillo'"
	sed -i "s@alias armadillo.*@$new_alias@g" /etc/bash.bashrc
fi
